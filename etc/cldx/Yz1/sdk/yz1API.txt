
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
            YZ1.DLL Ver 0.32 API 説明ファイル
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

==index==
  ( ☆はじめに ===> sdk.txt )
  ( ☆コマンドについて ===> sdk.txt )
  ( ☆ワイルドカードについて ===> sdk.txt )
  ☆ＡＰＩについて
  ☆構造体・メッセージ・コールバックについて
  ☆エラーコードについて
=========

★ＡＰＩについて

　　C 形式となっていますので，C++ から使用する場合は extern "C" で宣言・使用
　するようにしてください。また構造体については、すべてバイトアラインメントに
　しておく必要があります（YZ1.H で定義してます）。

=======================================================================
　LHA.DLL 互換API
=======================================================================
-----------------------------------------------------------------------
int WINAPI Yz1( const HWND wnd, LPCSTR cmd, LPSTR buf, const DWORD siz );
-----------------------------------------------------------------------
順序数	1
機能
	コマンド文字列で指定して、圧縮／解凍などを行います。

引数
	wnd		アプリケーションのウインドウを指定して下さい。
			DLL側では実行時に EnableWindow(wnd,FALSE) を実行し、
			ウインドウの動作を抑制します。
			ウインドウのないアプリケーションではNULLを指定して下さい。
	cmd		コマンド文字列。(sdk.txt 参照)
	buf		DLLからの結果報告を受け取るバッファ。sizeが0より大きければ
			終端'\0'は必ず付加されます。
	siz		bufに確保してあるバイト数。結果出力が必要ない場合、
			0を指定して下さい。

戻り値
	0=正常終了 , その他=エラー(★エラーコードについて 参照)

-----------------------------------------------------------------------
WORD WINAPI Yz1GetVersion();
-----------------------------------------------------------------------
順序数	2
機能
	DLLのバージョン番号を返します。

戻り値
	バージョン番号×１００。例えば、Ver 0.04なら 4 を返します。

-----------------------------------------------------------------------
WORD WINAPI Yz1GetCursorInterval();
-----------------------------------------------------------------------
順序数	3
機能
	カーソルの回転速度を得ます。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

戻り値
	カーソルの回転速度（msec)

-----------------------------------------------------------------------
BOOL WINAPI Yz1SetCursorInterval( const WORD wInterval );
-----------------------------------------------------------------------
順序数	4
機能
	カーソルの回転速度を設定します。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

引数
	wInterval	カーソルの回転速度（msec)

戻り値
	TRUE=正常終了（設定できた） , FALSE=異常終了

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetBackGroundMode();
-----------------------------------------------------------------------
順序数	5
機能
	DLLがバックグラウンドモードか否かを得ます。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

戻り値
	TRUE=バックグラウンドモード , FALSE=非バックグラウンドモード

-----------------------------------------------------------------------
BOOL WINAPI Yz1SetBackGroundMode( const BOOL bBG );
-----------------------------------------------------------------------
順序数	6
機能
	DLL のバックグラウンドモードを設定します。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

引数
	bBG		設定するバックグラウンドモード。

戻り値
	TRUE=正常終了（設定できた） , FALSE=異常終了

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetCursorMode();
-----------------------------------------------------------------------
順序数	7
機能
	DLL の動作中にカーソルを表示するモードか否かを得ます。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

戻り値
	TRUE=表示モード , FALSE=非表示モード

-----------------------------------------------------------------------
BOOL WINAPI Yz1SetCursorMode( const BOOL bCur );
-----------------------------------------------------------------------
順序数	8
機能
	DLL の動作中にカーソルを表示するモードか否かを設定します。
	YZ1.DLLでは値は保存しますが、動作に影響はありません。

引数
	bCur	設定するカーソルモード。

戻り値
	TRUE=正常終了（設定できた） , FALSE=異常終了

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetRunning();
-----------------------------------------------------------------------
順序数	10
機能
	現在DLLが動作中か否かを得ます。

戻り値
	TRUE=動作中 , FALSE=動作中でない


=======================================================================
　LHA.DLL非互換API
=======================================================================
-----------------------------------------------------------------------
BOOL WINAPI Yz1CheckArchive( LPCSTR filename, const int mode );
-----------------------------------------------------------------------
順序数	12
機能
	指定ファイルがサポートしている書庫ファイルとして
	正しいかどうかを返します。

引数
	filename	チェックしたいファイル名。
	mode		チェックモード。以下の値を指定できます。
				CHECKARCHIVE_ALL(16)：パスワード付き書庫を区別。

戻り値
	TRUE=正常な書庫 , FALSE=正常な書庫でない

	ただし、CHECKARCHIVE_ALL フラグを指定すると、
		2=PassWord付き書庫 , 1=非PassWord付きの正常な書庫 , 0=書庫でない
	となります。

-----------------------------------------------------------------------
int WINAPI Yz1GetFileCount( LPCSTR filename );
-----------------------------------------------------------------------
順序数	17
機能
	指定された書庫ファイルに格納されているファイル数を得ます。

引数
	filename	格納ファイル数を得たい書庫ファイル名。

戻り値
	格納ファイル数。エラー時は -1。

-----------------------------------------------------------------------
BOOL WINAPI Yz1QueryFunctionList( const int iAPI );
-----------------------------------------------------------------------
順序数	18
機能
	指定されたAPIが使用可能かどうかを得ます。

引数
	iAPI	API を示す一意な数値。具体的な数値はYZ1.H参照のこと。

戻り値
	TRUE=使用可能 , FALSE=使用不可

-----------------------------------------------------------------------
BOOL WINAPI Yz1ConfigDialog( const HWND wnd, LPSTR opt, const int mode );
-----------------------------------------------------------------------
順序数	11
機能
	本来はオプションを対話的に設定するためのAPIですが、
	現在は、単にバージョン情報を表示します。

=======================================================================
　OpenArchive系API
=======================================================================
　１．以下の説明で
　　　　「書庫ファイル」とは、操作しているyz1書庫そのもの。
　　　　「格納ファイル」とは、直前の検索にマッチした、書庫内のファイル。
　　　　 引数 HARC arc は、Yz1OpenArchive() で返されたハンドル。
　　　を指します。

　２．パスワード付き書庫をOpenArchive系で操作するときの注意
　　　　yz1書庫ではパスワードがかかっていると、それを入力しないと個々の
　　　格納ファイルの情報を取得できません。（書庫ファイルの情報は取得できます。）
　　　下の説明及び独自API "Yz1Set/GetDefaultPassword" の解説を参考にして、
　　　アプリケーションにとって適切な形で実装して下さい。

　　　＊ Yz1OpenArchive 内部での動作 ＊
　　　　　M_ERROR_MESSAGE_ON が立っていれば、Yz1SetDefaultPassword(arc,NULL);
　　　　　そうでなければ、Yz1SetDefaultPassword(arc,""); を自動で実行します。

　　　＊ パス付き書庫のOpenArchive後、最初に Yz1FindFirst したときの動作 ＊
　　　　　・標準パスワードが設定されていない(==NULLである)。
　　　　　　　パスワード入力用ダイアログを表示しユーザーに入力を促します。
　　　　　・標準パスワードが設定されている。
　　　　　　　その標準パスワードで情報取得を試みます。
　　　　　その結果、
　　　　　　＞正しいパスワードだった。
　　　　　　　　その正しいパスワードを自動でYz1SetDefaultPassword()で保存し、
　　　　　　　　そのあとは通常の書庫と同じに動作します。
　　　　　　＞間違ったパスワードだった。
　　　　　　　　エラー ERROR_PASSWORD_FILE を返し検索失敗。

　　　＊ 例 ＊
　　　　　１．パスワード付き書庫の情報表示はあっさりあきらめる。
　　　　　　　　M_ERROR_MESSAGE_OFF で OpenArchive() して、あとは普通に。
　　　　　２．あきらめるが、エラーメッセージは表示して欲しい。
　　　　　　　　M_ERROR_MESSAGE_ON で OpenArchive() して、次に
　　　　　　　　SetDefaultPassword(arc,"some dummy string") を実行。あとは普通に。

　　　　　３．パスワード付きならFindFirst時にユーザーに入力してもらう。
　　　　　　　　M_ERROR_MESSAGE_ON で OpenArchive() して、あとは普通に。
　　　　　４．してもらうが、エラーメッセージは表示しないで欲しい。
　　　　　　　　M_ERROR_MESSAGE_OFF で OpenArchive() して、次に
　　　　　　　　SetDefaultPassword(arc,NULL) を実行。あとは普通に。

　　　　　５．FindFirst()やYz1()を両方呼ぶので、
　　　　　　　いちいちダイアログを表示せず一回で済ませたい。

　　　　　　　　まず CheckArchive の返値で、パスワード付きかどうか調べる。
　　　　　　　　　＜パスワード無しならあとは適当に...＞
　　　　　　Ｉ　パスワード有りなら、アプリ側で自前のダイアログを出して、
　　　　　　　　　ユーザーにパスワードを入れさせる。
　　　　　　　　＞OpenArchive で開く。(M_ERROR_MESSAGE_ON/OFF はどっちでも可)
　　　　　　　　　SetDefaultPassword にさっきのパスワードを渡す。
　　　　　　　　　で、普通にFindFirst　　　とか、
　　　　　　　　＞Yz1() に -pオプションでさっきのパスワードを渡すとか。

　　　　　　II　別の手（Yz1FindFirst -> Yz1 の順の時のみ可能）
　　　　　　　　まず、OpenArchiveで開きFindFirstなどなどを行う。
　　　　　　　　CloseArchiveの前にGetDefaultPasswordでパスワードを取得しておき、
　　　　　　　　Yz1() に -p オプションで渡す。

-----------------------------------------------------------------------
int WINAPI Yz1SetDefaultPassword( HARC arc, LPCSTR pwd );
-----------------------------------------------------------------------
順序数	178（ [YZ1.DLL] 独自の API です！！）
機能
	書庫に対して標準パスワードを設定します。

引数
	pwd		標準として設定したいパスワード。NULLを指定すると、
			DLL側でユーザーにダイアログで問い合わせるようになります。

戻り値
	0=正常終了 , その他=エラー

-----------------------------------------------------------------------
DWORD WINAPI Yz1GetDefaultPassword( HARC arc, LPSTR pwd, DWORD siz );
-----------------------------------------------------------------------
順序数	179（ [YZ1.DLL] 独自の API です！！）
機能
	書庫に設定された標準パスワードを取得します。

引数
	pwd		標準パスワードを納めるバッファ。
	siz		バッファに確保されているバイト数。

戻り値
	0=正常終了 , -1 = エラーor標準パスがまだ設定されていない
	その他 = バッファ容量不足。必要なバイト数を返します。

-----------------------------------------------------------------------
int WINAPI Yz1PasswordDialog( HWND parent, LPSTR buf, DWORD siz );
-----------------------------------------------------------------------
順序数	180（ [YZ1.DLL] 独自の API です！！）
機能
	YZ1.DLL標準のパスワード入力ダイアログを表示します。

引数
	parent	ダイアログの親ウインドウ。
	buf		パスワードを受け取るためのバッファ。
	siz		バッファに確保されているバイト数。

戻り値
	0=正常終了 , -1=キャンセル

-----------------------------------------------------------------------
HARC WINAPI Yz1OpenArchive( const HWND wnd, LPCSTR filename, const DWORD mode );
-----------------------------------------------------------------------
順序数	21
機能
	指定ファイルが有効な書庫ファイルならばオープンし、そのハンドルを
	返します。以後の書庫ファイルへのアクセスはこのハンドルで行います。

引数
	wnd　　　アプリのウィンドウ・ハンドル。
	filename 書庫ファイル名。
	mode　　 処理モードを指定するフラグ。次の値を | で組み合わせる。
		M_CHECK_ALL_PATH　　　ファイル名の検索時に全パスを検索する。
		M_CHECK_FILENAME_ONLY 検索時にファイル名のみを対象とする。
		M_ERROR_MESSAGE_ON　　※エラー時にエラーメッセージを出す。
		M_ERROR_MESSAGE_OFF　 ※エラー時にエラーメッセージを出さない。
			※独自仕様：パスワード入力要求の表示もこのフラグによる設定に準じます

戻り値
	指定の書庫ファイルに対応したハンドル。エラー時は NULL。

-----------------------------------------------------------------------
int WINAPI Yz1CloseArchive( HARC arc );
-----------------------------------------------------------------------
順序数	22
機能
	上記のAPIで割り付けたハンドルを解放します。
	※ なお、自前で GlobalFree() で解放しようとしてはいけません。
	　かならずこのAPIでお願いします。

戻り値
	0=正常終了 , その他=エラー

-----------------------------------------------------------------------
int WINAPI Yz1FindFirst( HARC arc,LPCSTR WildName,LPINDIVIDUALINFO lpInfo );
-----------------------------------------------------------------------
順序数	23
機能
	最初の格納ファイルの情報を得ます。

引数
	WildName	 検索するファイル名の指定。ワイルドカード指定可能。
				スペース区切りで複数指定も可能。"" で括られていても良いです。
				空文字列を指定すると、書庫内の全てのファイルがマッチします。
	lpInfo		 結果を返すための INDIVIDUALINFO 型の構造体へのポインタ。
				結果を必要としない場合は NULL を指定する事。

戻り値
	0=正常終了 , -1=検索終了 , その他=エラー

-----------------------------------------------------------------------
int WINAPI Yz1FindNext( HARC arc,LPINDIVIDUALINFO lpInfo );
-----------------------------------------------------------------------
順序数	24
機能
	２番目以降の格納ファイルの情報を取得します。

引数
	lpInfo		 結果を返すための INDIVIDUALINFO 型の構造体へのポインタ。
				結果を必要としない場合は NULL を指定する事。

戻り値
	0=正常終了 , -1=検索終了 , その他=エラー

-----------------------------------------------------------------------
int WINAPI Yz1GetArcFileName( HARC arc,LPCSTR buf,const int siz );
-----------------------------------------------------------------------
順序数	31
機能
	書庫ファイル名を得ます。

引数
	buf		ファイル名を格納するバッファ。
	siz		バッファのサイズ。

戻り値
	0=正常終了 , その他=エラー

-----------------------------------------------------------------------
DWORD WINAPI Yz1GetArcFileSize( HARC arc );
-----------------------------------------------------------------------
順序数	32
機能
	書庫ファイルのサイズを得ます。

戻り値
	書庫ファイルのサイズ。エラー時は -1。

-----------------------------------------------------------------------
WORD WINAPI Yz1GetArcDate( HARC arc );
-----------------------------------------------------------------------
順序数	36
機能
	書庫ファイルの更新日付をDOS形式で得ます。

戻り値
	書庫ファイルの更新日付。エラー時には -1。形式は次のようなものです。
		ビット　　内容
		 0-4　　年月日の日 (1〜31)
		 5-8　　年月日の月 (1〜12)
		 9-15 　年月日の年 (1980年からの経過年数)
	※理論上は、2107年いっぱいまで表現できます。

-----------------------------------------------------------------------
WORD WINAPI Yz1GetArcTime( HARC arc );
-----------------------------------------------------------------------
順序数	37
機能
	書庫ファイルの更新時刻をDOS形式で得ます。

戻り値
	書庫ファイルの更新時刻。エラー時には -1。形式は次のようなものです。
		ビット 　内容
		 0-4　　時分秒の秒 (2 で割算されている)
		 5-10 　時分秒の分 (0〜59)
		11-15 　時分秒の時 (0〜23)
	※ Win32APIを使って実装しているので、環境によって秒を
	　切り上げ切り捨てのどちらで扱うかが異なります。

-----------------------------------------------------------------------
int WINAPI Yz1IsSFXFile( HARC arc );
-----------------------------------------------------------------------
順序数	39
機能
	書庫ファイルが自己解凍ファイルかどうかを得ます。

戻り値
	0=普通の書庫 , -1=エラー , その他=自己解凍書庫

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetArcCreateTimeEx( HARC arc,FILETIME* pCreatFT );
-----------------------------------------------------------------------
順序数	68
機能
	書庫の作成日時をFILETIME形式で得ます。

引数
	pCreatFT	日時情報を入れるFILETIME構造体。

戻り値
	TRUE=正常終了 , FALSE=異常終了

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetArcAccessTimeEx( HARC arc,FILETIME* pAccsFT );
-----------------------------------------------------------------------
順序数	69
機能
	書庫の参照日時をFILETIME形式で得ます。

引数
	pAccsFT		日時情報を入れるFILETIME構造体。

戻り値
	TRUE=正常終了 , FALSE=異常終了

-----------------------------------------------------------------------
BOOL WINAPI Yz1GetArcWriteTimeEx( HARC arc,FILETIME* pWriteFT );
-----------------------------------------------------------------------
順序数	70
機能
	書庫の最終更新日時をFILETIME形式で得ます。

引数
	pWriteFT	日時情報を入れるFILETIME構造体。

戻り値
	TRUE=正常終了 , FALSE=異常終了

-----------------------------------------------------------------------
DWORD WINAPI Yz1GetArcOriginalSize( HARC arc );
-----------------------------------------------------------------------
順序数	33
機能
	現時点までの検索にマッチしたファイルの（解凍後の）サイズの合計を得る。

戻り値
	合計サイズ。エラー時は -1。

-----------------------------------------------------------------------
int WINAPI Yz1GetFileName( HARC arc,LPCSTR buf,const int siz );
-----------------------------------------------------------------------
順序数	40
機能
	格納ファイルのファイル名を得ます。

引数
	buf		ファイル名を格納するバッファ。
	siz		バッファのサイズ。

戻り値
	0=正常終了 , その他=エラー

-----------------------------------------------------------------------
DWORD WINAPI Yz1GetOriginalSize( HARC arc );
-----------------------------------------------------------------------
順序数	41
機能
	格納ファイルの（解凍後の）サイズを得ます。

戻り値
	格納ファイルのサイズ。エラー時は -1。

-----------------------------------------------------------------------
int WINAPI Yz1GetAttribute( HARC arc );
-----------------------------------------------------------------------
順序数	47
機能
	格納ファイルの属性を得ます。

戻り値
	格納ファイルの属性。以下の各ビットを | で組み合わせたもの。エラー時は -1。

		FA_RDONLY　　読み込み専用ファイル。
		FA_HIDDEN　　不可視属性ファイル。
		FA_SYSTEM　　システムファイル。
		FA_LABEL　 　ボリュームラベル。
		FA_DIREC　 　ディレクトリ。
		FA_ARCH　　　保存ビット。

-----------------------------------------------------------------------
int WINAPI Yz1GetMethod( HARC arc,LPSTR buf,const int siz );
-----------------------------------------------------------------------
順序数	61
機能
	格納ファイルの圧縮法を得ます。

引数
	buf		圧縮法の名前を格納するバッファ。
	siz		バッファのサイズ。

戻り値
	0=正常終了 , その他=エラー

-----------------------------------------------------------------------
WORD WINAPI Yz1GetDate( HARC arc );
-----------------------------------------------------------------------
順序数	44
機能
	格納ファイルの日付を得ます。

戻り値
	格納ファイルの日付。エラー時は -1。
	形式は MSDOS のタイムスタンプに準じます。(Yz1GetArcDateの説明参照)

-----------------------------------------------------------------------
WORD WINAPI Yz1GetTime( HARC arc );
-----------------------------------------------------------------------
順序数	45
機能
	格納ファイルの時刻を得ます。

戻り値
	格納ファイルの時刻。エラー時は -1。
	形式は MSDOS のタイムスタンプに準じます。(Yz1GetArcTimeの説明参照)

-----------------------------------------------------------------------
DWORD WINAPI Yz1GetWriteTime( HARC arc );
-----------------------------------------------------------------------
順序数	62
機能
	格納ファイルの最終更新日時を得ます。

戻り値
	格納ファイルの UNIX 形式の UTC による更新日時。エラー時は -1。
	UNIX 形式とは，Jan.1,1970 00:00:00 からの秒数。


=======================================================================
　ウインドウズ・メッセージ系API
=======================================================================
-----------------------------------------------------------------------
BOOL WINAPI Yz1SetOwnerWindow( const HWND wnd );
-----------------------------------------------------------------------
順序数	90
機能
	YZ1.DLL のメッセージの送信先ウィンドウを設定します。YZ1.DLL は
	ここで指定されたウィンドウに wm_arcextract メッセージを送信します。

戻り値
	TRUE=正常終了 , FALSE=エラー

-----------------------------------------------------------------------
BOOL WINAPI Yz1ClearOwnerWindow();
-----------------------------------------------------------------------
順序数	91
機能
	上のＡＰＩで設定したウィンドウの設定を解除します。

戻り値
	TRUE=正常終了 , FALSE=エラー

-----------------------------------------------------------------------
BOOL WINAPI Yz1SetOwnerWindowEx( HWND wnd, LPARCHIVERPROC lpArcProc );
-----------------------------------------------------------------------
順序数	92
機能
	処理状況を受け取るためのコールバック関数の指定を行います。
	pArcProc に NULL を指定すると SetOwnerWindow と同じ処理を行います。

戻り値
	TRUE=正常終了 , FALSE=エラー

-----------------------------------------------------------------------
BOOL WINAPI Yz1KillOwnerWindowEx( HWND wnd );
-----------------------------------------------------------------------
順序数	93
機能
	上のＡＰＩで設定したウィンドウの設定を解除します。

戻り値
	TRUE=正常終了 , FALSE=エラー

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

★構造体・メッセージ・コールバックについて

＜INDIVIDUALINFO 構造体＞

	typedef struct {
		DWORD	dwOriginalSize;
		DWORD	dwCompressedSize;
		DWORD	dwCRC;
		UINT	uFlag;
		UINT	uOSType;
		WORD	wRatio;
		WORD	wDate;
		WORD	wTime;
		char	szFileName[FNAME_MAX32 + 1];
		char	dummy1[3];
		char	szAttribute[8];
		char	szMode[8];
	} INDIVIDUALINFO;

	dwOriginalSize	圧縮前の、格納ファイルのサイズ。
	・szFileName	格納ファイル名。
	・szAttribute	格納ファイルの属性。
	・szMode		YZ1.DLLでは "-yz1-" を入れます。
	・wDate			格納ファイルの更新日付(DOS 形式)。
	・wTime			格納ファイルの更新時間(DOS 形式)。
	・他のメンバは全て０クリアされます。

＜ウインドウズ・メッセージ＞

　　YZ1.DLL は、-i オプションなどで経過表示を抑制された場合には
　　呼び出し元のウィンドウに対して処理状況を知らせるメッセージを送ります。
　　ただし，Yz1SetOwnerWindow() API により通知先のウィンドウを設定する必要があります。
　　送られるメッセージは

　　　wm_arcextract

　　　　WPARAM : nMode = (int)wParam

　　　　　　0 : 該当ファイルの処理を開始することを表します。
　　　　　　1 : 該当ファイルの処理中であることを表します。
　　　　　　2 : 処理を終了しようとしています。lpEis は NULL です。
　　　　　　3 : 該当書庫の処理を開始することを表します。
　　　　　　　　szSourceFileName に書庫名が格納されます。

　　　　LPARAM : lpEis = (EXTRACTINGINFO FAR *)lParam

			typedef struct {
				DWORD	dwFileSize;
				DWORD	dwWriteSize;
				char	szSourceFileName[FNAME32_MAX + 1];
				char	dummy1[3];
				char	szDestFileName[FNAME32_MAX + 1];
				char	dummy[3];
			} EXTRACTINGINFO;

			・dwFileSize			格納ファイルの圧縮前サイズ。
			・dwWriteSize			↑このうち、展開/圧縮処理が行われたサイズ。
			・szSourceFileName		処理を行う格納ファイル名。
			・szDestFileName		処理を行うファイルのパス名。
			・他のメンバは全て０クリアされます。

　　　　戻り値 : 

　　　　　　アプリケーション側が 0 を返すと処理継続、
　　　　　　0 以外を返すと処理を中止します。

　　wm_arcextract メッセージは、RegisterWindowMessage() でシステムに
　　登録することによって使用できます。

＜コールバック＞

　　Yz1SetOwnerWindow() ではなく Yz1SetOwnerWindowEx() を用いると、
　　以下のようなコールバック関数へ処理状況を通知します。

	typedef BOOL CALLBACK ARCHIVERPROC( HWND wnd, UINT msg, UINT uState,
										LPEXTRACTINGINFOEX pEis )

　　　wnd　　Yz1SetOwnerWindowEx で指定したウィンドウハンドルが渡されます。
　　　msg　　現在のところは wm_arcextract となります。
　　　uState　wm_arcextract メッセージのパラメータ wParam と同義です。
　　　pEis　 格納ファイルの情報が入る構造体です。

		typedef struct {
			EXTRACTINGINFO exinfo;
			DWORD dwCompressedSize;
			DWORD dwCRC;
			UINT  uOSType;
			WORD  wRatio;
			WORD  wDate;
			WORD  wTime;
			char  szAttribute[8];
			char  szMode[8];
		} EXTRACTINGINFOEX;

		・exinfo			EXTRACTINGINFO 構造体が格納されます。
		・szAttribute		格納ファイルの属性。
		・szMode			"-yz1-"
		・wDate				格納ファイルの更新日付(DOS 形式)。
		・wTime				格納ファイルの更新時刻(DOS 形式)。
		・他のメンバは全て０クリアされます。

　　　戻り値　 処理を継続させるときは TRUE、中止させるときは FALSE を返して下さい。
　　　　　　　　※注意！ 戻り値はウインドウメッセージの場合と逆になります！！

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

★エラーコードについて

　　YZ1.DLL が返すエラー値です。

	ERROR_NOT_ARC_FILE		書庫ファイル名が指定されていません。
	ERROR_COMMAND_NAME		コマンド指定が間違っています。
	ERROR_LONG_FILE_NAME	ファイル名／ディレクトリ名が長すぎます。
	ERROR_NOT_FILENAME		ファイル名の指定が必要です。
	ERROR_TMP_OPEN			作業ファイルが作成できません。
	ERROR_USER_CANCEL		ユーザーによって処理を中断されました。
	ERROR_MAKEDIRECTORY		ディレクトリが作成できません。
	ERROR_HARC_ISNOT_OPENED	OpenArchiveでファイルが開かれていません。
	ERROR_NOT_SEARCH_MODE	FindFirstで検索されていません。
	ERROR_PASSWORD_FILE		パスワードがかかっています。
	ERROR_CANNOT_READ		読み込み失敗。
	0xFFFFFFFF				その他のエラー。
