(provide "treeview/macro")
(require "treeview/defs")
(lisp::in-package-1 "treeview")
(system:*putprop 'with-treeview "treeview ライブラリ内でのみ用いる" 'lisp::function-documentation)
(system:*fset 'with-treeview '(macro ((treeview-id) &body body) (block with-treeview "treeview ライブラリ内でのみ用いる" (list* 'let (list (list '*treeview-id* treeview-id)) body))))
(system:*putprop 'with-treeview 1 'lisp-indent-hook)
(system:*putprop 'with-app "treeview ライブラリ外から用いる" 'lisp::function-documentation)
(system:*fset 'with-app '(macro ((app-id &optional save-last-app-id-p) &body body) (block with-app "treeview ライブラリ外から用いる" (list 'let (list (list 'app-id app-id) (list 'save-last-app-id-p save-last-app-id-p)) (list* 'multiple-value-prog1 (list 'if '(eq *treeview-app-id* app-id) (cons 'progn body) (list* 'let* '((*treeview-app-id* app-id) (*treeview-id* (treeview-app-id-get-treeview-id app-id)) (*treeview-expand-expand-pre-hook* (symbol-value (treeview-data-get 'expand-expand-pre-hook))) (*treeview-expand-expand-hook* (symbol-value (treeview-data-get 'expand-expand-hook)))) body)) '((when (and app-id save-last-app-id-p) (setq *treeview-last-app-id* app-id) (setq *treeview-last-id* (treeview-app-id-get-treeview-id app-id)))))))))
(system:*putprop 'with-app 1 'lisp-indent-hook)
(system:*putprop 'treeview-on-treeview "treeview 上から editor のコマンドを実行する" 'lisp::function-documentation)
(system:*fset 'treeview-on-treeview '(macro (&rest body) (block treeview-on-treeview "treeview 上から editor のコマンドを実行する" (list* 'unwind-protect (list* 'progn '(treeview-focus-editor) body) '((progn (treeview-focus-treeview) (end-wait-cursor) (refresh-screen)))))))
(system:*putprop 'treeview-make-tv-command "treeview 用コマンドの作成" 'lisp::function-documentation)
(system:*fset 'treeview-make-tv-command '(macro (&rest commands) (block treeview-make-tv-command "treeview 用コマンドの作成" (let* ((main-command (car commands)) (sub-functions (cdr commands)) (name (intern (concatenate 'string (symbol-name main-command) "-on-treeview")))) (list 'progn (list 'defun name 'nil '(interactive) (list 'treeview-on-treeview (list* 'prog1 (list 'call-interactively (list 'quote main-command)) (mapcar #'(lambda (func) (list 'funcall (list 'quote func))) sub-functions)))) (list 'quote name))))))
(system:*putprop 'treeview-suppress-redraw "再描画を抑制" 'lisp::function-documentation)
(system:*fset 'treeview-suppress-redraw '(macro (&rest body) (block treeview-suppress-redraw "再描画を抑制" (list* 'unwind-protect (list* 'progn '(treeview-data-set 'suppress-redraw-count (1+ (treeview-data-get 'suppress-redraw-count 0))) '(treeview-set-redraw nil) body) '((progn (treeview-data-set 'suppress-redraw-count (1- (treeview-data-get 'suppress-redraw-count 0))) (if (zerop (treeview-data-get 'suppress-redraw-count 0)) (treeview-set-redraw t))))))))
